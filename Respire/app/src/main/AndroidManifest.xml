<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.respireapp">

    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.READ_LOGS" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
    <uses-permission android:name="com.android.launcher.permission.READ_SETTINGS" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="com.android.launcher.permission.READ_SETTINGS" />
    <!-- 这个权限用于进行网络定位 -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <!-- 这个权限用于访问GPS定位 -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <!-- 用于访问wifi网络信息，wifi信息会用于进行网络定位 -->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <!-- 获取运营商信息，用于支持提供运营商信息相关的接口 -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <!-- 用于读取手机当前的状态 -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <!-- 写入扩展存储，向扩展卡写入数据，用于写入离线定位数据 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
    // SDK 权限申明, 第三方 APP 接入时，请将 com.yuntongxun.ecdemo 替换为自己的包名
    // 和下面的 uses-permission 一起加入到你的 AndroidManifest 文件中。
    <permission
        android:name="com.yuntongxun.ecdemo.permission.RECEIVE_MSG"
        android:protectionLevel="signature" />
    <permission
        android:name="com.yuntongxun.ecdemo.permission.INCOMING_CALL"
        android:protectionLevel="signature" />
    // 接收 SDK 消息广播权限， 第三方 APP 接入时，请将 com.yuntongxun.ecdemo 替换为自己的包名
    <uses-permission android:name="com.yuntongxun.ecdemo.permission.RECEIVE_MSG" />
    // 如果没有VOIP功能可以忽略
    <uses-permission android:name="com.yuntongxun.ecdemo.permission.INCOMING_CALL" />
    // 以上为v5.1.9r 版本增加

    // 允许程序打开网络sockets
    <uses-permission android:name="android.permission.INTERNET" />
    // 允许程序访问有关的网络信息
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    // 允许程序访问Wi-Fi网络状态信息
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    // 允许应用写（非读）用户的外部存储器
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    // 允许读取电话的状态
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    // 允许一个程序获取信息有关当前或最近运行的任务，一个缩略的任务状态，是否活动等等
    <uses-permission android:name="android.permission.GET_TASKS" />
    // 允许程序录制音频
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    // 允许应用程序修改全局声音设置的权限
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
    // 允许使用PowerManager的WakeLocks保持进程在休眠时从屏幕消失
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    // 允许请求访问使用照相设备(如果使用视频通话则必选配置)
    <uses-permission android:name="android.permission.CAMERA" />
    // SDK核心服务配置
    <service
        android:name="com.yuntongxun.ecsdk.ECClientService"
        android:enabled="true"
        android:process=":push" />
    // 以下两项为SDK事件提醒广播
    <receiver
        android:name="com.yuntongxun.ecsdk.booter.CCPReceivers$AlarmReceiver"
        android:process=":push" />
    // v5.1.9r增加配置选项
    <receiver
        android:name="com.yuntongxun.ecsdk.booter.Alarm"
        android:exported="false"
        android:process=":push" />
    // SDK网络改变广播
    <receiver
        android:name="com.yuntongxun.ecsdk.booter.CCPReceivers$ConnectionReceiver"
        android:process=":push">
        <intent-filter>
            <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
        </intent-filter>
    </receiver>
    // SDK广播通知配置（开机广播）
    // 可选广播、如果应用想做开机重启，可以实现该广播通知即可
    <receiver
        android:name="com.yuntongxun.ecsdk.booter.CCPReceivers$BootReceiver"
        android:process=":push">
        <intent-filter>
            <action android:name="android.intent.action.BOOT_COMPLETED" />
        </intent-filter>
    </receiver>
    // 配置SDK消息通知广播 ,SDK通知会分三种提醒方式
    // 1、直接通过设置的回调接口（OnChatReceiveListener）Push给应用
    // 2、如果应用没有设置回调接口则采用（BroadcastReceiver）广播通知（v5.1.8版本）
    // 此时如果应用处于未运行状态则会直接唤醒应用处理
    // 3、如果应用未处于运行状态并且不想被唤醒应用运行则采用状态栏通知处理（SDK直接提醒，不会通知应用）,比如调用
    // ECDevice#logout(ECDevice.NotifyMode, ECDevice.OnLogoutListener)退出接口传入后台接收消息才会有提醒

    // 注意：以上在a和b的场景下，SDK都会将消息直接给应用处理，只有在c的情况SDK才会直接处理消息提醒，
    // 所以应用需要处理a和b两种情况
    // 声明自定义通知的广播接收器，第三方 APP 集成时，action 中的 com.yuntongxun.ecdemo 请替换为自己的包名
    <!-- 需要权限声明 <uses-permission android:name="com.yuntongxun.ecdemo.permission.RECEIVE_MSG"/> -->
    // 如果没有VOIP功能可以忽略
    <!-- 需要权限声明 <uses-permission android:name="com.yuntongxun.ecdemo.permission.INCOMING_CALL"/> -->
    <receiver
        android:name=".service.YuntxNotifyReceiver"
        android:exported="false">
        <intent-filter>
            // 接收push消息
            // action匹配规则{packageName + ".action" + "功能"}
            <action android:name="com.yuntongxun.ecdemo.action.VOIP_CALL" />
            <action android:name="com.yuntongxun.ecdemo.action.MESSAGE" />
            <action android:name="com.yuntongxun.ecdemo.action.NOTIFICATION_CLICK" />
            <action android:name="com.yuntongxun.ecdemo.action.PERSON_VERSION" />
        </intent-filter>
    </receiver>

    <!-- 访问网络，网络定位需要上网 -->
    <application
        android:name=".Entity.Myapp"
        android:allowBackup="true"
        android:hardwareAccelerated="false"
        android:icon="@drawable/ricon"
        android:label="@string/app_name"
        android:largeHeap="true"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <meta-data
            android:name="com.baidu.lbsapi.API_KEY"
            android:value="5trhwzCl1Me23M2XQDSM08bsHQQPnyL2" />

        <activity android:name=".Activity.LoginActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".Activity.MainActivity" />
        <activity android:name=".Activity.NoPicAcitivity"/>
        <activity android:name=".Activity.RegisterActivity" />
        <activity android:name=".Activity.HomeActivity" />
        <activity android:name=".Activity.MeActivity" />

        <service android:name=".Service.LoginService" />

        <!-- <receiver android:name=".Activity.LoginActivity$MyReceiver" /> -->

        <activity android:name=".Activity.LoginjumpActivity" />
        <activity android:name=".Activity.ProfileActivity" />
        <activity android:name=".Activity.DiscoveryActivity" />
        <activity android:name=".Activity.HistoryActivity" />
        <activity android:name=".Activity.PageActivity" />
        <activity android:name=".Activity.SuccessregActivity" />
        <activity android:name=".Activity.ChangeUsernameActivity" />
        <activity android:name=".Activity.ChangePasswordActivity" />
        <activity android:name=".Activity.ChangePhoneActivity" />
        <activity android:name=".Activity.ChangeEmailActivity" />
        <activity android:name=".Activity.ChangeSexActivity" />
        <activity android:name=".Activity.ChangeCityActivity" />
        <activity android:name=".Activity.TodayActivity" />
        <activity android:name=".Activity.PoolActivity" />

        <activity android:name=".Activity.TestNotificationActivity" >

        </activity>
        <activity android:name=".Activity.TestShowrecommandActivity"></activity>

        <activity android:name=".Activity.TestpicActivity" />
        <activity
            android:name=".Activity.map.HeatMap"
            android:label="@string/app_name" />
        <activity android:name=".Activity.ItineraryActivity" />
        <activity android:name=".Activity.PhotoInfoActivity" />
        <activity android:name=".Activity.SearchActivity" />
        <activity
            android:name="com.avoscloud.leanchatlib_demo.ConversationListActivity"
            android:label="@string/app_name"
            android:theme="@style/AVActivity.NoActionBar"></activity>
        <activity android:name="com.avoscloud.leanchatlib.activity.AVChatActivity" />

        <receiver android:name="com.avos.avoscloud.AVBroadcastReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.USER_PRESENT" />
            </intent-filter>
        </receiver>

        <service android:name="com.avos.avoscloud.PushService" />

        <activity android:name="com.avoscloud.leanchatlib.activity.ImageBrowserActivity" />


        <activity
            android:name="com.leancloud.im.guide.activity.AVSquareActivity"
            android:launchMode="singleTask"
            android:windowSoftInputMode="adjustResize|stateAlwaysHidden"/>

        <activity android:name="com.leancloud.im.guide.activity.AVSquareMembersActivity"/>
        <activity
            android:name="com.leancloud.im.guide.activity.AVSingleChatActivity"
            android:launchMode="singleTop"
            android:windowSoftInputMode="adjustResize|stateAlwaysHidden"/>


        <service android:name="com.avos.avoscloud.PushService"/>

        <receiver android:name="com.leancloud.im.guide.NotificationBroadcastReceiver"/>

        <receiver android:name="com.avos.avoscloud.AVBroadcastReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
                <action android:name="android.intent.action.USER_PRESENT"/>
            </intent-filter>
        </receiver>

        <activity
            android:name="com.leancloud.im.guide.activity._AVSingleChatActivity"/><!-- ATTENTION: This was auto-generated to add Google Play services to your project for
     App Indexing.  See https://g.co/AppIndexing/AndroidStudio for more information. -->
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />


        <activity android:name=".Activity.SceneryInfoActivity"/>
        <service android:name=".Service.RecommandService"/>
        <receiver android:name=".Service.AlarmReceiver"/>
        <activity android:name=".Activity.RecommendActivity"/>

        <service
            android:name="com.baidu.location.f"
            android:enabled="true"
            android:process=":remote" >

        </service>
    </application>

</manifest>